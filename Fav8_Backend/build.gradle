plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id "org.openapi.generator" version "6.2.1"
}

group = 'com.woqomoqo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

sourceSets {
	main {
		java {
			srcDir "${rootDir}/server/Fav8Server/src/main/java"
		}
	}
}

task openApiGenerateServer(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask){
	generatorName = "spring"
	library = "spring-boot"
	inputSpec = "${rootDir}/openapi/stations.yml".toString()
	outputDir = "${rootDir}/server/Fav8Server".toString()
	globalProperties = [
			modelDocs      : "false",
			models         : "",
			apis           : "",
			supportingFiles: "ApiUtil.java"
	]
	configOptions = [
			useOptional          : "true",
			swaggerDocketConfig  : "false",
			performBeanValidation: "false",
			useBeanValidation    : "true",
			useTags              : "true",
			singleContentTypes   : "true",
			basePackage          : "com.woqomoqo.radiostations.api",
			configPackage        : "com.woqomoqo.radiostations.api",
			title                : rootProject.name,
			java8                : "false",
			dateLibrary          : "java8",
			serializableModel    : "true",
			artifactId           : rootProject.name,
			apiPackage           : "com.woqomoqo.radiostations.api",
			modelPackage         : "com.woqomoqo.radiostations.api.model",
			invokerPackage       : "com.woqomoqo.radiostations.api",
			interfaceOnly        : "true"
	]
}

task openApiGenerateClient(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask){
	generatorName = "swift5"
	inputSpec = "${rootDir}/openapi/stations.yml".toString()
	outputDir = "${rootDir}/client/Fav8Server".toString()
	modelNameSuffix = "Dto"
	configOptions = [
			projectName : "Fav8Server",
			responseAs: "Combine",
			useBacktickEscapes: "true",
			useSPMFileStructure: "true",
			removeMigrationProjectNameClass: "true"
	]
}

repositories {
	mavenCentral()
	google()
	jcenter()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'com.mysql:mysql-connector-j'
	// testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'io.springfox:springfox-swagger2:3.0.0'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation 'org.jetbrains:annotations:23.0.0'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.4'
	implementation 'io.springfox:springfox-swagger2:3.0.0'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.13'
	implementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.apache.tomcat:tomcat-servlet-api:10.1.2'
	implementation 'javax.servlet:servlet-api:2.5'
	implementation 'javax.validation:validation-api:2.0.1.Final'

	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	implementation 'org.hibernate:hibernate-core:6.1.5.Final'
	implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.0'
	implementation 'org.springframework.boot:spring-boot-autoconfigure:3.0.0'
	implementation 'javax.persistence:javax.persistence-api:2.2'
	implementation 'org.springframework:spring-beans:6.0.2'
	implementation 'org.springframework:org.springframework.beans:3.2.2.RELEASE'
	runtimeOnly 'org.jasig.cas:cas-server-support-jdbc:4.2.7'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.0.0'
}

tasks.named('test') {
	useJUnitPlatform()
}
